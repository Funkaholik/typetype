// Generated by CoffeeScript 1.7.1
(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    typetype: function(text, callback, keypress) {
      var charDelay, deferreds, elem, interval;
      charDelay = 100;
      interval = function(index) {
        var lastchar, nextchar;
        lastchar = text[index - 1];
        nextchar = text[index];
        return Math.random() * charDelay * (function() {
          switch (lastchar) {
            case nextchar:
              return 1.6;
            case '.':
            case '!':
              return 16;
            case ',':
            case ';':
              return 8;
            case ' ':
              return 3;
            case lastchar === '\n' && nextchar !== '\n':
              return 10;
            default:
              return 2;
          }
        })();
      };
      deferreds = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = this.length; _i < _len; _i++) {
          elem = this[_i];
          _results.push((function(elem) {
            var setText;
            setText = elem.tagName.toLowerCase() === 'input' ? function(str) {
              return elem.value = str;
            } : function(str) {
              return elem.innerHTML = str;
            };
            return $.Deferred(function(deferred) {
              var updateChar;
              updateChar = function(index) {
                setText(text.substr(0, index));
                if (keypress != null) {
                  keypress.call(elem, index);
                }
                if (index < text.length) {
                  return setTimeout(function() {
                    return updateChar(index + 1);
                  }, interval(index));
                } else {
                  return deferred.resolve();
                }
              };
              return updateChar(1);
            }).done(function() {
              return callback != null ? callback.call(elem) : void 0;
            });
          })(elem));
        }
        return _results;
      }).call(this);
      return $.when.apply($, deferreds);
    }
  });

}).call(this);
